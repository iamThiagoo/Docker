Vis칚o Geral sobre Docker 游눹


# Inicia o docker no Fedora
sudo service docker start


# Retorna a vers칚o utilizada
docker version


# docker ps ====> Retorna os container ativos
         ps -a ==> Retorna os status e status de todos os containers que est칚o ativos e inativos


# Executa container
docker run <nome_imagem>


# Deixa rodando o container e o terminal da aplica칞칚o 
docker run -it <nome_imagem>


# Deixa executando o container em background
docker run -it -d <nome_imagem>


# Os containers s칚o isolados e n칚o possuem contato com nada do lado de fora, para isso se usa a tag -p para abrir uma porta
Algo 칰til caso queira usar o nginx por exemplo: docker run -d -p 80:80 nginx


# Parando container
docker stop <nome_usado_na_imagem> ===> Para um container em executa칞칚o


# Renomeando container
docker run -d --name Nginx nginx ====> Com a tag name voc칡 poder치 setar o pr칩prio nome do container


# Renomeando imagem
docker tag <id_imagem> meu_projeto


# Iniciando imagem com nome e tag
docker build -t meuubuntu:2.0.0 .


# Tag na imagem
docker tag <id_imagem> meu_projeto:1.0.0


# Para reiniciar um trabalho num container que foi parado 칠 necess치rio usar: docker start <id_container>
  칄 importante usar o start pois cada run iniciar치 um novo container


# Verificamos o que aconteceu dentro de um container
docker logs <id_container>


# Remove um container da m치quina, se estiver sendo rodado utilize a tag -f (force) para par치-lo
docker -rm <id_container>


# Retorna todas as imagens que est칚o instaladas no seu docker
docker images


# Instalar uma imagem no nosso docker
docker pull <imagem>


# Criando uma imagem
- Criar apenas um arquivo no diret칩rio intitulado "Dockerfile"
- Utilizar as seguintes instru칞칫es no arquivo: FROM, WORKDIR, COPY, RUN, CMD ...


# Rodando a imagem criada
- docker build .                                   "Utilize o ponto se estiver dentro do diret칩rio"
- docker image ls                                  "Garanta que est치 tudo ok"
- docker run -d -p 80:80 --name primeira imagem    "Utilize uma porta se necess치rio e mude o nome do container"


# Removendo imagem
docker rmi -f <imagem>           "Pode ser usado a tag -f para for칞ar a remo칞칚o caso o container esteja ligado!"


# Pedindo ajuda
docker COMMAND --help


# Removendo images, containers e networks que n칚o est칚o sendo utilizados (TEM LIGA QUE VAI REMOVER TUDO CARA!)
docker system prune


# Removendo autom치ticamente ap칩s o utilizar
docker run --rm <container>


# Copiando arquivos
docker cp <nome_container>:/<path> . /<new_path>/    "Esteja na mesma pasta quando for fazer essa c칩pia"


# Verificando o processamento do container
docker top <nome_container>


# Inspecionando o container
docker inspect <nome_container>


# Verificando o processamento dos containers
docker stats 


## Autentica칞칚o no Docker Hub
docker login
docker logout

## Enviar imagem ao Docker Hub
docker build -t <nome_user>/<nome_imagem> .
docker push <imagem>  "칄 necess치rio possuir um reposit칩rio"

## Enviando atualiza칞칚o
칄 necess치rio trocar apenas a tag para fazer a atualiza칞칚o
docker build -t <nome_user>/<nome_imagem>:novaversao
docker push -t <nome_user>/<nome_imagem>:novaversao